%{
This is for analyzing the protein G-IgG binding kinetics, a project in
    collaboration with Prof. Wei Cheng in UMich, Ann Arbor.

Check and adjust parameters that are marked with "frank".
%}

function s_avg_dist=drift_correction(m)

g_drift = 1;
A=dir;
[nf,~]=size(A);

%{
Go through the folder to see if there is already _pydrift or _drift file.
_pydrift is generated by python. It has four columns and it uses the unit 
of conventional pixel.
%}
for i=1:nf,
    if A(i).isdir == 0
        s=A(i).name;
        if ~isempty(strfind(s, '_pydrift.txt'))
            g_drift = 0;
            break;
        elseif ~isempty(strfind(s, '_drift.txt'))
            g_drift = -1;
            break;
        end
    end
end

%Generate the _drift file or read existing _*drift files.
if g_drift == 1
    a=m(:,5);
    mini = min(a);
    maxi = max(a);
    avg_dist = zeros((maxi-mini+1),2);
%     s_avg_dist = zeros((maxi-mini+1),2);

    for i=mini+1:maxi
        index=find(a==i);
        if ~isempty(index)
            avg_dist(i-mini+1,1)=m(index(1),1)-m(1,1);
            avg_dist(i-mini+1,2)=m(index(1),2)-m(1,2);
        else
            avg_dist(i-mini+1,1)=avg_dist(i-mini,1);
            avg_dist(i-mini+1,2)=avg_dist(i-mini,2);
        end
    end
elseif g_drift == 0
    temp_avg_dist=dlmread(s);
    avg_dist(:,1)=180.0*temp_avg_dist(:,2);
    avg_dist(:,2)=180.0*temp_avg_dist(:,3);

elseif g_drift == -1
    temp_avg_dist=dlmread(s);
    avg_dist(:,1)=temp_avg_dist(:,1);
    avg_dist(:,2)=temp_avg_dist(:,2);
end

hdl = figure;
drift_plot(hdl,avg_dist,'b','b');
s_avg_dist(:,1)=smooth(avg_dist(:,1),21,'sgolay');
s_avg_dist(:,2)=smooth(avg_dist(:,2),21,'sgolay');
drift_plot(hdl,s_avg_dist,'k','k');
input('enter-to continue ','s');
close(hdl);

return;
end







function drift_plot(hdl,avg_dist,c1,c2)

figure(hdl);
subplot(2,1,1);
plot(avg_dist(:,1)/180.0,c1);
title ('x drift (conventional pixels)');
hold on;
zoom on;
subplot(2,1,2);
plot(avg_dist(:,2)/180.0,c2);
title ('y drift (conventional pixels)');
hold on;
zoom on;

return;
end